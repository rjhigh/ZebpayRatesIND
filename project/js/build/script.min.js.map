{"version":3,"sources":["../main.js","../page.js","../apprates.js"],"names":["selectQuote","quoteCurrency","AppRates","loadData","Page","ViewModel","this","rates","ko","observableArray","vm","hideOfflineWarning","document","querySelector","classList","remove","getElementById","showOfflineWarning","add","request","XMLHttpRequest","open","onload","status","offlineMessageElement","createElement","setAttribute","innerHTML","responseText","appendChild","console","warn","onerror","error","send","RateViewModel","self","pair","buy","sell","RateApiService","getAll","Promise","resolve","reject","log","response","JSON","parse","Error","statusText","RateAdapter","toRateViewModel","data","toRateViewModels","length","map","item","RateController","rateApiService","rateAdapter","then","rateController","filter","split","navigator","serviceWorker","register","reg","catch","err","defaultCurrency","window","addEventListener","e","onLine","applyBindings"],"mappings":"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","file":"script.min.js","sourcesContent":["// register the service worker if available\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('./sw.js').then(function(reg) {\n        console.log('Successfully registered service worker', reg);\n    }).catch(function(err) {\n        console.warn('Error whilst registering service worker', err);\n    });\n}\nvar defaultCurrency = 'INR';\n\nwindow.addEventListener('online', function(e) {\n    // re-sync data with server\n    console.log(\"You are online\");\n    Page.hideOfflineWarning();\n    AppRates.loadData(defaultCurrency);\n}, false);\n\nwindow.addEventListener('offline', function(e) {\n    // queue up events for server\n    console.log(\"You are offline\");\n    Page.showOfflineWarning(defaultCurrency);\n}, false);\n\n// check if the user is connected\nif (navigator.onLine) {\n    AppRates.loadData(defaultCurrency);\n} else {\n    // show offline message\n    Page.showOfflineWarning();\n}\n\nfunction selectQuote(quoteCurrency) {\n    AppRates.loadData(quoteCurrency);\n}\n// set knockout view model bindings\nko.applyBindings(Page.vm);\n","var Page = (function() {\n\n    // declare the view model used within the page\n    function ViewModel() {\n        var self = this;\n        self.rates = ko.observableArray([]);\n    }\n\n    // expose the view model through the Page module\n    return {\n        vm: new ViewModel(),\n        hideOfflineWarning: function() {\n            // enable the live data\n            document.querySelector(\".rates-list\").classList.remove('loading')\n            // remove the offline message\n            document.getElementById(\"offline\").remove();\n            // load the live data\n        },\n        showOfflineWarning: function() {\n            // disable the live data\n            document.querySelector(\".rates-list\").classList.add('loading')\n                // load html template informing the user they are offline\n            var request = new XMLHttpRequest();\n            request.open('GET', './offline.html', true);\n\n            request.onload = function() {\n                if (request.status === 200) {\n                    // success\n                    // create offline element with HTML loaded from offline.html template\n                    var offlineMessageElement = document.createElement(\"div\");\n                    offlineMessageElement.setAttribute(\"id\", \"offline\");\n                    offlineMessageElement.innerHTML = request.responseText;\n                    document.getElementById(\"main\").appendChild(offlineMessageElement);\n                } else {\n                    // error retrieving file\n                    console.warn('Error retrieving offline.html');\n                }\n            };\n\n            request.onerror = function() {\n                // network errors\n                console.error('Connection error');\n            };\n\n            request.send();\n        }\n    }\n\n})();\n","var AppRates = (function () {\n    function RateViewModel() {\n        var self = this;\n        self.pair = \"\";\n        self.buy = \"\";\n        self.sell = \"\";\n    }\n\n    function RateApiService() {\n        var self = this;\n\n        // retrieves all Rates from the API\n        self.getAll = function () {\n            return new Promise(function (resolve, reject) {\n                var request = new XMLHttpRequest();\n                request.open('GET', 'https://www.zebapi.com/pro/v1/market');\n\n                request.onload = function () {\n                    console.log('response from zeb..', request.response)\n                    // success\n                    if (request.status === 200) {\n                        console.log('response from zeb..', request.response)\n                        // resolve the promise with the parsed response text (assumes JSON)\n                        resolve(JSON.parse(request.response));\n                    } else {\n                        // error retrieving file\n                        reject(Error(request.statusText));\n                    }\n                };\n\n                request.onerror = function () {\n                    // network errors\n                    reject(Error(\"Network Error\"));\n                };\n\n                request.send();\n            });\n        };\n    }\n\n    function RateAdapter() {\n        var self = this;\n\n        self.toRateViewModel = function (data) {\n            if (data) {\n                var vm = new RateViewModel();\n                vm.pair = data.pair;\n                vm.buy = 'Buy: '+data.buy;\n                vm.sell = 'Sell: '+data.sell;\n                return vm;\n            }\n            return null;\n        };\n\n        self.toRateViewModels = function (data) {\n            if (data && data.length > 0) {\n                return data.map(function (item) {\n                    return self.toRateViewModel(item);\n                });\n            }\n            return [];\n        };\n    }\n\n    function RateController(rateApiService, rateAdapter) {\n        var self = this;\n\n        self.getAll = function () {\n            // retrieve all the Rates from the API\n            return rateApiService.getAll().then(function (response) {\n                return rateAdapter.toRateViewModels(response);\n            });\n        };\n    }\n\n\n    // initialize the services and adapters\n    var rateApiService = new RateApiService();\n    var rateAdapter = new RateAdapter();\n\n    // initialize the controller\n    var rateController = new RateController(rateApiService, rateAdapter);\n\n    return {\n        loadData: function (quoteCurrency) {\n            // retrieve all routes\n            document.querySelector(\".rates-list\").classList.add('loading')\n            rateController.getAll().then(function (response) {\n                // bind the Rates to the UI\n                if (quoteCurrency == 'BTC') {\n                    response = response.filter(function(item) { return item.pair == 'ETH-BTC'});\n                } else {\n                    response = response.filter(function(item) { return item.pair.split('-')[1] == quoteCurrency});\n                }\n                Page.vm.rates(response);\n                document.querySelector(\".rates-list\").classList.remove('loading')\n            });\n        }\n    }\n\n})();\n"]}